App\Entity\TaskOnsiteInstallation:
  properties:
    id:
      identifier: true
  operations:
    ApiPlatform\Metadata\Post:
      security: 'is_granted(constant("App\\Entity\\User::ROLE_TASK_OPERATIONS"))'
      input: 'App\Dto\CreateTaskDto'
      processor: 'App\StateProcessor\CreateTaskOnsiteInstallationStateProcessor'
    ApiPlatform\Metadata\Patch:
      security: 'is_granted(constant("App\\Entity\\User::ROLE_TASK_OPERATIONS")) ||
                  is_granted(constant("App\\Entity\\User::ROLE_ENGINEER"))'
      input: 'App\Dto\EditTaskDto'
      processor: 'App\StateProcessor\EditTaskOnsiteInstallationStateProcessor'
    ApiPlatform\Metadata\Delete: ~
    ApiPlatform\Metadata\GetCollection:
      normalizationContext:
        groups: [ 'task', 'task-onsite-installation' ]
      filters: [ 'general_order_filter' ]
    ApiPlatform\Metadata\Get:
      normalizationContext:
        groups: [ 'task', 'task-onsite-installation' ]

  graphQlOperations:
    create:
      class: ApiPlatform\Metadata\GraphQl\Mutation
      security: 'is_granted(constant("App\\Entity\\User::ROLE_TASK_OPERATIONS"))'
      input: 'App\Dto\CreateTaskDto'
      processor: 'App\StateProcessor\CreateTaskOnsiteInstallationStateProcessor'
    update:
      class: ApiPlatform\Metadata\GraphQl\Mutation
      security: 'is_granted(constant("App\\Entity\\User::ROLE_TASK_OPERATIONS")) ||
                  is_granted(constant("App\\Entity\\User::ROLE_ENGINEER"))'
      input: 'App\Dto\EditTaskDto'
      processor: 'App\StateProcessor\EditTaskOnsiteInstallationStateProcessor'
    delete:
      class: ApiPlatform\Metadata\GraphQl\DeleteMutation
    ApiPlatform\Metadata\GraphQl\QueryCollection:
      normalizationContext:
        groups: [ 'task', 'task-onsite-installation' ]
      filters: [ 'general_order_filter' ]
      paginationType: 'page'
    ApiPlatform\Metadata\GraphQl\Query:
      normalizationContext:
        groups: [ 'task', 'task-onsite-installation' ]